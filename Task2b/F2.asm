EXTRN NEW_LINE: NEAR

CSEG SEGMENT PARA PUBLIC 'CODE'
	ASSUME CS:CSEG
	
	BIN_UNSIGN PROC NEAR
		PUSH BP
		MOV BP, SP
		MOV BX, [BP + 4]
		MOV AX, [BX]
		PUSH SI
		
		MOV SI, 15
		
		; REMOVING LEADING ZEROS
		REMOVE_LEADING:
		SHL AX, 1
		JNC IGNORE_SYMBOL ; IF CF == 0, WE NEED TO IGNORE IT
		JMP FORWARD ; DIGIT IS 1, SO GO FORWARD TO PRINTING
		
		IGNORE_SYMBOL:
		DEC SI
		JNZ REMOVE_LEADING
		JMP FINISH ; IF SI == 0 IT MEANS THAT THERE IS NO DIGITS LEFT
		
		; THE FIRST SYMBOL IS ALWAYS '1'
		FORWARD:
		PUSH AX
		MOV DL, '1'
		MOV AH, 2
		INT 21H
		POP AX
		
		NEXT:
		SHL AX, 1
		MOV DL, '0'
		JNC PRINTING; IF CF == 1 THEN DL += 1 TO BECOME '1'
		INC DL ; MAKE '0' -> '1'
		
		PRINTING:
		PUSH AX
		MOV AH, 2
		INT 21H
		POP AX		
		DEC SI
		JNZ NEXT
		
		FINISH:
		CALL NEW_LINE
		
		POP SI
		POP BP
		RET 2
	BIN_UNSIGN ENDP
	
CSEG ENDS

PUBLIC BIN_UNSIGN

END